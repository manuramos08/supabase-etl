create table neighbourhoods_airbnb(
	neigh_id SERIAL not null primary key,
	neighbourhood varchar(50) NOT NULL
);

create table listings_airbnb
(
	id bigint not null PRIMARY key,
	neigh_id int not null,
	foreign key (neigh_id) references neighbourhoods_airbnb(neigh_id),
	latitude NUMERIC(9,6) not null,
	longitude NUMERIC(9,6) not null,
	property_type varchar(100),
	accommodates  int,
	bedrooms NUMERIC, 
	beds NUMERIC, 
	price NUMERIC(20,2),
	minimum_nights int NOT null,
	maximum_nights int NOT null,
	availability_365 int NOT NULL,
	number_of_reviews int NOT null,
	review_score_rating NUMERIC(4,2) NOT null,
	reviews_per_month NUMERIC(6,2) NOT NULL 	
);

create table reviews_summary_airbnb(
	listing_id bigint not null primary key,
	foreign key (listing_id) references listings_airbnb(id),
	num_reviews int not null,
	last_date date not null
);

create extension if not exists postgis;

create table neighbourhoods_gejson_airbnb(
	geom geometry(MultiPolygon, 4326) not null,
	neigh_id int NOT NULL primary key,
	foreign key (neigh_id) references neighbourhoods_airbnb(neigh_id)
);


create table global_superstore2 (
	row_id int not null primary key,
	order_id varchar(20) NOT null,
	order_date date NOT null,
	ship_date date NOT null,
	ship_mode varchar(50),
	customer_id varchar(10) NOT null,
	customer_name varchar(50),
	segment varchar (50),
	city varchar (50),
	state varchar (50),
	country varchar (50),
	market varchar (50),
	region varchar (50),
	product_id varchar(255) NOT null,
	category varchar(50) ,
	sub_category varchar(50),
	product_name varchar(255),
	sales numeric(10,2) NOT null,
	quantity int NOT null,
	discount NUMERIC(4,2) NOT null,
	profit numeric(10,2) NOT null,
	shipping_cost numeric(10,2),
	order_priority VARCHAR(15),
	profit_margin numeric(5,2) NOT null
);

create table online_retail_II (
	invoice VARCHAR(10) NOT null,
	stock_code VARCHAR(50) NOT null,
	description varchar(200),
	quantity int NOT null,
	invoice_date TIMESTAMP NOT null,
	unit_price numeric(10,2) NOT null,
	customer_id float NOT null,
	primary key (invoice, stock_code, customer_id),
	country varchar(50) NOT null,
	month int NOT null,
	year int NOT NULL
);

CREATE TABLE IF NOT EXISTS load_log (
  id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  table_name   TEXT      NOT NULL,
  rows_loaded  INTEGER   NOT NULL,
  loaded_at    TIMESTAMPTZ DEFAULT now()  -- fecha y hora UTC
);

INSERT INTO load_log (table_name, rows_loaded, loaded_at)
VALUES ('neighbourhoods_airbnb', (SELECT COUNT(*) FROM neighbourhoods_airbnb), NOW());

create table reviews_summary_airbnb_staging (like reviews_summary_airbnb including all excluding CONSTRAINTS);
select * from reviews_summary_airbnb;




















